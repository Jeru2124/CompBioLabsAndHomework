#basic syntax of command tools: [command_name] [options] [inputs]$rm -r .git #NOTE ^ thats potentially dangerousÉ youÕre gonna remove everything inside the repo. #best be sure you know what youÕre doing before you do it!#	A)NAVIGATION#know where you are within the directories$pwd#list what files are present$ls#list what files are presently hidden from view$ls -a#navigate to different directory#list directory name next to cd command Òcd DocumentsÓ#cd one or two mother directory of the directory you currently occupy$cd .$cd ..#navigate directly home$cd ~#make new directory$mkdir newdir#move file into new directory$mv filename newdir/#	B)WORKING WITH GIT#download materials from git#list url after: git clone ÒURLÓ$git clone #initiate git$git init#view tracked files from git$git status#view git tracking history$git log#stage a file: git add ÒfilenameÓ or git add * to add everything in directory#git add#commit command with command message after -m$git commit -m#view status of files compared to last commit; git diff filename$git diff#view status of file compared to last file committed; git diff HEAD ÒfilenameÓ$git diff HEAD#view status of file compared to what it was at a specific commit via number N$git diff HEAD~N#delete any changes that have not been committed; list filename$git checkout#use the version of a specific file from N commits ago; list filename$git checkout HEAD~N#undoing a commit$git revert#remove file that has previously been committed$git rm filename#push to github$git push origin master#	C)WORKING WITH .txt#make file from the command line without using a command-only editor and open it$touch new filename.txt$open new filename.txt#word count: wc Òfile name(s)Ó #output: newlines, words, characters$wc#word search: grep Òfile name(s)Ó$grep#re-direction: Òcommand>filenameÓ$grep somefilename.txt>secondfilename.txt#removing file git has not tracked$rm filename